--- Makefile~	Wed Apr  4 05:44:41 2001
+++ Makefile	Mon Nov 12 17:23:28 2001
@@ -4,17 +4,17 @@
 #If you do not have gcc, change the setting for COMPILER, but you must
 #use an ANSI standard C compiler (NOT the old SunOS 4.1.3 cc
 #compiler; get gcc if you are still using that). 
-COMPILER=gcc
+#COMPILER=gcc
 
 #If the ar command fails on your system, consult the ar manpage
 #for your system. 
-AR=ar
+AR=/usr/ccs/bin/ar
 
 #Typical configuration: support for PNG images, JPEG images, and FreeType text.
 #Remove -DHAVE_LIBFREETYPE if you can live without FreeType text.
 #Add -DHAVE_XPM if you have X and xpm installed and you want that feature.
 
-CFLAGS=-g -DHAVE_LIBPNG -DHAVE_LIBJPEG -DHAVE_LIBFREETYPE
+CFLAGS=-g -O -DHAVE_LIBPNG -DHAVE_LIBJPEG -DHAVE_LIBFREETYPE
 
 #PLEASE NOTE: YOU MAY HAVE TO JUGGLE THE ORDER OF THE LIBRARIES.
 #Some systems are very picky about link order. They don't all agree
@@ -23,33 +23,33 @@
 #Best for most users. If you don't have FreeType, remove -lfreetype.
 #Add -lxpm if you need XPM support.
 
-LIBS=-lgd -lpng -lz -ljpeg -lfreetype -lm
+LIBS=-lgd -lpng -lz -ljpeg -lfreetype -lXpm -lX11 -lm
 
 #Typical install locations for freetype 2.0, zlib, xpm, libjpeg 
 #and libpng header files. If yours are somewhere else, change this. 
 #-I. is important to ensure that the version of gd you are installing 
 #is used, and not an older release in your directory tree somewhere.
 
-INCLUDEDIRS=-I. -I/usr/include/freetype2 -I/usr/include/X11 -I/usr/X11R6/include/X11 -I/usr/local/include 
+INCLUDEDIRS=-I. -I${LOCALBASE}/include/freetype2 -I${X11BASE}/include/X11 -I${LOCALBASE}/include 
 
 #Typical install locations for freetype, zlib, xpm and libpng libraries.
 #If yours are somewhere else, other than a standard location
 #such as /lib or /usr/lib, then change this. This line shouldn't hurt 
 #if you don't actually have some of the optional libraries and directories.
-LIBDIRS=-L/usr/local/lib -L/usr/lib/X11 -L/usr/X11R6/lib
+LIBDIRS=-L${LOCALBASE}/lib -R ${LOCALBASE}/lib -L${X11BASE}/lib -R${X11BASE}/lib
 
 #Location where libgd.so should be installed by "make install".
 #THIS MUST BE ONE OF YOUR STANDARD SHARED LIBRARY LOCATIONS, unless
 #you add a new directory to your LD_LIBRARY_PATH environment setting.
 #Otherwise applications will NOT find libgd.so and will produce an 
 #error.  
-INSTALL_LIB=/usr/lib
+INSTALL_LIB=${PREFIX}/lib
 
 #Location where .h files should be installed by "make install".
-INSTALL_INCLUDE=/usr/include
+INSTALL_INCLUDE=${PREFIX}/include
 
 #Location where useful non-test programs should be installed by "make install".
-INSTALL_BIN=/usr/local/bin
+INSTALL_BIN=${PREFIX}/bin
 
 #
 #
@@ -70,6 +70,8 @@
 BIN_PROGRAMS=pngtogd pngtogd2 gdtopng gd2topng gd2copypal gdparttopng webpng
 TEST_PROGRAMS=gdtest gddemo gd2time gdtestft testac
 
+all:	libgd.so.${VERSION} libgd.a ${BIN_PROGRAMS}
+
 default: instructions
 
 instructions:
@@ -87,7 +89,7 @@
 
 test: $(TEST_PROGRAMS)
 
-install: libgd.so.${VERSION} $(BIN_PROGRAMS)
+install: libgd.so.${VERSION} libgd.a $(BIN_PROGRAMS)
 	sh ./install-item 755 pngtogd $(INSTALL_BIN)/pngtogd
 	sh ./install-item 755 pngtogd2 $(INSTALL_BIN)/pngtogd2
 	sh ./install-item 755 gdtopng $(INSTALL_BIN)/gdtopng
@@ -104,6 +106,15 @@
 	sh ./install-item 644 gdfontmb.h $(INSTALL_INCLUDE)/gdfontmb.h
 	sh ./install-item 644 gdfonts.h $(INSTALL_INCLUDE)/gdfonts.h
 	sh ./install-item 644 gdfontt.h $(INSTALL_INCLUDE)/gdfontt.h
+	sh ./install-item 644 libgd.so.${VERSION} \
+		$(INSTALL_LIB)/libgd.so.${VERSION}
+	-rm $(INSTALL_LIB)/libgd.so.${MAJOR_VERSION} 2>/dev/null
+	ln -s $(INSTALL_LIB)/libgd.so.${VERSION} \
+		$(INSTALL_LIB)/libgd.so.${MAJOR_VERSION}	
+	-rm $(INSTALL_LIB)/libgd.so 2>/dev/null
+	ln -s $(INSTALL_LIB)/libgd.so.${VERSION} \
+		$(INSTALL_LIB)/libgd.so	
+	sh ./install-item 644 libgd.a $(INSTALL_LIB)/libgd.a
 
 gddemo: gddemo.o
 	$(CC) gddemo.o -o gddemo	$(LIBDIRS) $(LIBS)
@@ -146,23 +157,24 @@
 		gdfontt.o gdfonts.o gdfontmb.o gdfontl.o gdfontg.o \
 		gdtables.o gdft.o gdcache.o gdkanji.o wbmp.o \
 		gd_wbmp.o gdhelpers.o gd_topal.o 
+LIBOBJS_SO=${LIBOBJS:.o=.so}
 
 #Shared library. This should work fine on any ELF platform (Linux, etc.) with
 #GNU ld or something similarly intelligent. To avoid the chicken-and-egg
 #problem, this target also installs the library so that applications can
 #actually find it.
 
-libgd.so.${VERSION}: ${LIBOBJS}
+libgd.so.${VERSION}: ${LIBOBJS_SO}
 	-rm -f libgd.so.${VERSION} 2>/dev/null
-	ld -shared -o libgd.so.${VERSION} ${LIBOBJS}
-	sh ./install-item 644 libgd.so.${VERSION} \
-		$(INSTALL_LIB)/libgd.so.${VERSION}
-	-rm $(INSTALL_LIB)/libgd.so.${MAJOR_VERSION} 2>/dev/null
-	ln -s $(INSTALL_LIB)/libgd.so.${VERSION} \
-		$(INSTALL_LIB)/libgd.so.${MAJOR_VERSION}	
-	-rm $(INSTALL_LIB)/libgd.so 2>/dev/null
-	ln -s $(INSTALL_LIB)/libgd.so.${VERSION} \
-		$(INSTALL_LIB)/libgd.so	
+	${CC} -shared -Wl,-h -Wl,libgd.so.${MAJORVERSION} \
+		-o libgd.so.${VERSION} ${LIBOBJS_SO} ${LIBDIRS} ${LIBS}
+
+.SUFFIXES:	.c .o .so
+.c.o:
+	${CC} -c ${CFLAGS} ${INCLUDEDIRS} $< -o $@
+
+.c.so:
+	${CC} -c -fPIC -DPIC ${CFLAGS} ${INCLUDEDIRS} $< -o $@
 
 #Static library, if you really need one for some reason.
 libgd.a: ${LIBOBJS}
